## Secret key
# http://www.playframework.com/documentation/latest/ApplicationSecret
# ~~~~~
# The secret key is used to sign Play's session cookie.
# This must be changed for production, but we don't recommend you change it in this file.
play.crypto.secret = "changeme"
play.crypto.secret = ${?APPLICATION_SECRET}

## Internationalisation
# https://www.playframework.com/documentation/latest/JavaI18N
# https://www.playframework.com/documentation/latest/ScalaI18N
# ~~~~~
# Play comes with its own i18n settings, which allow the user's preferred language
# to map through to internal messages, or allow the language to be stored in a cookie.
play.i18n {
  # The application languages
  langs = [ "en" ]

  # Whether the language cookie should be secure or not
  #langCookieSecure = true

  # Whether the HTTP only attribute of the cookie should be set to true
  #langCookieHttpOnly = true
}

api.secret = "changeme"
api.secret = ${?API_SECRET}

ui.host = "http://localhost:9000"
ui.host = ${?UI_HOST}

croissants {
  // should be a list separated with ',' : "email1,email2"
  excluded_emails = ${CROISSANTS_EXCLUDED_EMAILS}

  // should be a list separated with ',' : "domain1,domain2"
  included_domains = ${CROISSANTS_INCLUDED_DOMAINS}
}

play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoModule"

mongodb.uri = "mongodb://localhost:27017/zencroissants"
mongodb.uri = ${?MONGODB_URI}

# Mail configuration
# ~~~~~~~~~~~~~~~~~~~
mail {
  // croissants contact email
  contact = ${MAIL_CONTACT}
  // all email
  all = ${MAIL_ALL}
  // mock
  mock = false
}

play.mailer {
  host = ${PLAY_MAILER_HOST}
  port = 25
  ssl = no
}

oauth {
  url.authorize = "https://accounts.google.com/o/oauth2/auth"
  url.authorize = ${?OAUTH_URL_AUTHORIZE}
  url.token = "https://www.googleapis.com/oauth2/v3/token"
  url.token = ${?OAUTH_URL_TOKEN}
  url.userinfos = "https://www.googleapis.com/plus/v1/people/me"
  url.userinfos = ${?OAUTH_URL_USERINFOS}
  url.removetoken = "https://accounts.google.com/o/oauth2/revoke"
  url.removetoken = ${?OAUTH_URL_REMOVETOKEN}
  client.id = ${OAUTH_CLIENT_ID}
  client.secret = ${OAUTH_CLIENT_SECRET}
  scopes = "email"
  scopes = ${?OAUTH_SCOPES}
}
